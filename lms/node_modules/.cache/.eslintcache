[{"F:\\Users\\Asus\\react_lms\\lms\\src\\index.js":"1","F:\\Users\\Asus\\react_lms\\lms\\src\\reportWebVitals.js":"2","F:\\Users\\Asus\\react_lms\\lms\\src\\App.js":"3","F:\\Users\\Asus\\react_lms\\lms\\src\\pages\\login\\index.js":"4","F:\\Users\\Asus\\react_lms\\lms\\src\\pages\\home\\index.js":"5","F:\\Users\\Asus\\react_lms\\lms\\src\\pages\\register\\index.js":"6","F:\\Users\\Asus\\react_lms\\lms\\src\\components\\navbar\\index.js":"7","F:\\Users\\Asus\\react_lms\\lms\\src\\components\\menu\\index.js":"8","F:\\Users\\Asus\\react_lms\\lms\\src\\utils\\Navmenu\\index.js":"9","F:\\Users\\Asus\\react_lms\\lms\\src\\utils\\logo\\index.js":"10","F:\\Users\\Asus\\react_lms\\lms\\src\\utils\\navMenuList\\index.js":"11","F:\\Users\\Asus\\react_lms\\lms\\src\\utils\\menuList\\index.js":"12","F:\\Users\\Asus\\react_lms\\lms\\src\\api.js":"13","F:\\Users\\Asus\\react_lms\\lms\\src\\pages\\verifyUser\\index.js":"14","F:\\Users\\Asus\\react_lms\\lms\\src\\pages\\dhome\\index.js":"15","F:\\Users\\Asus\\react_lms\\lms\\src\\components\\dDrawerAppbar\\index.js":"16","F:\\Users\\Asus\\react_lms\\lms\\src\\components\\selectVehicle\\index.js":"17"},{"size":579,"mtime":1676031025038,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1676029119590,"results":"20","hashOfConfig":"19"},{"size":901,"mtime":1676093225119,"results":"21","hashOfConfig":"19"},{"size":4403,"mtime":1676030844184,"results":"22","hashOfConfig":"19"},{"size":20044,"mtime":1676130592059,"results":"23","hashOfConfig":"19"},{"size":6126,"mtime":1676122277244,"results":"24","hashOfConfig":"19"},{"size":3565,"mtime":1669473450000,"results":"25","hashOfConfig":"19"},{"size":833,"mtime":1669469954000,"results":"26","hashOfConfig":"19"},{"size":818,"mtime":1669469340000,"results":"27","hashOfConfig":"19"},{"size":1127,"mtime":1668937608000,"results":"28","hashOfConfig":"19"},{"size":2052,"mtime":1671733948000,"results":"29","hashOfConfig":"19"},{"size":2105,"mtime":1668937652000,"results":"30","hashOfConfig":"19"},{"size":100,"mtime":1676032626741,"results":"31","hashOfConfig":"19"},{"size":4330,"mtime":1676093159553,"results":"32","hashOfConfig":"19"},{"size":218,"mtime":1676093414361,"results":"33","hashOfConfig":"19"},{"size":4966,"mtime":1676122486210,"results":"34","hashOfConfig":"19"},{"size":0,"mtime":1676119680720,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"1y61c7v",{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"39"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\Users\\Asus\\react_lms\\lms\\src\\index.js",[],[],[],"F:\\Users\\Asus\\react_lms\\lms\\src\\reportWebVitals.js",[],[],"F:\\Users\\Asus\\react_lms\\lms\\src\\App.js",[],[],"F:\\Users\\Asus\\react_lms\\lms\\src\\pages\\login\\index.js",[],[],"F:\\Users\\Asus\\react_lms\\lms\\src\\pages\\home\\index.js",["91","92","93","94"],[],"import React, { useEffect, useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Alert, Button, Link, Modal, Box, Grid } from '@mui/material';\r\nimport TextField from '@mui/material/TextField';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport api from '../../api'\r\nimport Navbar from '../../components/navbar'\r\nimport Typography from '@mui/material/Typography';\r\nimport DriverHome from '../dhome';\r\n\r\nexport default function Home() {\r\n\r\n  const [alert, setAlert] = useState(0);\r\n  const [alert1, setAlert1] = useState(0);\r\n  const navigate = useNavigate();\r\n\r\n  const messages = {\r\n    400: ['error', \"Required * fields can't be empty\"],\r\n    200: ['success', \"Successful\"],\r\n    201: ['info', \"Email not verified, redirecting to verify\"],\r\n    401: ['error', \"Email or Password is incorrect.\"],\r\n    500: ['error', \"Internal Server error!\"]\r\n  }\r\n\r\n  const onAlertClosed = () => {\r\n    setAlert1(0);\r\n  }\r\n  const [userData, setUserData] = useState(null);\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n  const [openRM, setOpenRM] = React.useState(false);\r\n  const handleOpenRM = () => setOpenRM(true);\r\n  const handleCloseRM = () => setOpenRM(false);\r\n  const [openAB, setOpenAB] = React.useState(false);\r\n  const handleOpenAB = () => setOpenAB(true);\r\n  const handleCloseAB = () => setOpenAB(false);\r\n  const [openRB, setOpenRB] = React.useState(false);\r\n  const handleOpenRB = () => setOpenRB(true);\r\n  const handleCloseRB = () => setOpenRB(false);\r\n  const [openASB, setOpenASB] = React.useState(false);\r\n  const handleOpenASB = () => setOpenASB(true);\r\n  const handleCloseASB = () => setOpenASB(false);\r\n  const [openBL, setOpenBL] = React.useState(false);\r\n  const handleOpenBL = () => setOpenBL(true);\r\n  const handleCloseBL = () => setOpenBL(false);\r\n  const [openML, setOpenML] = React.useState(false);\r\n  const handleOpenML = () => setOpenML(true);\r\n  const handleCloseML = () => setOpenML(false);\r\n  const [books, setBooks] = React.useState([])\r\n  const [members, setMembers] = React.useState([])\r\n\r\n  function getBooks(){\r\n    api.get(\"/getBooks\", {withCredentials: true})\r\n    .then((data)=>{\r\n      console.log(data)\r\n      setBooks(data.data);\r\n    })\r\n    .catch(err=>{\r\n      console.log(err)\r\n    })\r\n  }\r\n  function getMembers(){\r\n    api.get(\"/getMembers\", {withCredentials: true})\r\n    .then((data)=>{\r\n      console.log(data)\r\n      setMembers(data.data);\r\n      navigate(\"/\")\r\n    })\r\n    .catch(err=>{\r\n      console.log(err)\r\n    })\r\n  }\r\n  function handleSubmit(event){\r\n\r\n    event.preventDefault();\r\n    const data = new FormData(event.currentTarget);\r\n\r\n    if(!data.get('name') || !data.get('phone')){\r\n      setAlert(400);\r\n      setTimeout(() => {\r\n        onAlertClosed();\r\n      }, 3000);\r\n      return\r\n    }\r\n\r\n    const loginDataObj = {\r\n      mname: data.get('name'),\r\n      mnumber: data.get('phone')\r\n    } \r\n    \r\n    api.post('/addMember', loginDataObj, {withCredentials: true})\r\n    .then(function(res){\r\n      setAlert(res.status);\r\n      if(res.status === 200){\r\n        console.log(res.status)\r\n        setTimeout(function(){\r\n          onAlertClosed();\r\n          navigate(\"/\")\r\n        }, 3000);\r\n      }\r\n      else if(res.status === 201){\r\n        setTimeout(function(){\r\n          onAlertClosed();\r\n        }, 3000);\r\n      }\r\n    })\r\n    .catch(function(err){\r\n      setAlert(err.response.status);\r\n      setTimeout(function(){\r\n        onAlertClosed();\r\n      }, 3000);\r\n    }); \r\n  }\r\n  function handleSubmitRM(event){\r\n\r\n    event.preventDefault();\r\n    const data = new FormData(event.currentTarget);\r\n\r\n    if(!data.get('name') || !data.get('phone')){\r\n      setAlert(400);\r\n      setTimeout(() => {\r\n        onAlertClosed();\r\n      }, 3000);\r\n      return\r\n    }\r\n\r\n    const loginDataObj = {\r\n      mname: data.get('name'),\r\n      mnumber: data.get('phone')\r\n    } \r\n    \r\n    api.post('/removeMember', loginDataObj, {withCredentials: true})\r\n    .then(function(res){\r\n      console.log(200)\r\n      setAlert(res.status);\r\n      if(res.status === 200){\r\n        setTimeout(function(){\r\n          onAlertClosed();\r\n          navigate(\"/\")\r\n        }, 3000);\r\n      }\r\n      else if(res.status === 201){\r\n        setTimeout(function(){\r\n          onAlertClosed();\r\n          navigate(\"/verifyUser\", {state: { userId: res.data.userId, email: res.data.email}})\r\n        }, 3000);\r\n      }\r\n    })\r\n    .catch(function(err){\r\n      setAlert(err.response.status);\r\n      setTimeout(function(){\r\n        onAlertClosed();\r\n      }, 3000);\r\n    }); \r\n  }\r\n  function handleSubmitAB(event){\r\n\r\n    event.preventDefault();\r\n    const data = new FormData(event.currentTarget);\r\n\r\n    if(!data.get('aname') || !data.get('bname')){\r\n      setAlert(400);\r\n      setTimeout(() => {\r\n        onAlertClosed();\r\n      }, 3000);\r\n      return\r\n    }\r\n\r\n    const loginDataObj = {\r\n      bname: data.get('bname'),\r\n      aname: data.get('aname'),\r\n    } \r\n    \r\n    api.post('/addBook', loginDataObj, {withCredentials: true})\r\n    .then(function(res){\r\n      console.log(200)\r\n      setAlert(res.status);\r\n      if(res.status === 200){\r\n        setTimeout(function(){\r\n          onAlertClosed();\r\n          navigate(\"/\")\r\n        }, 3000);\r\n      }\r\n      else if(res.status === 201){\r\n        setTimeout(function(){\r\n          onAlertClosed();\r\n          navigate(\"/verifyUser\", {state: { userId: res.data.userId, email: res.data.email}})\r\n        }, 3000);\r\n      }\r\n    })\r\n    .catch(function(err){\r\n      setAlert(err.response.status);\r\n      setTimeout(function(){\r\n        onAlertClosed();\r\n      }, 3000);\r\n    }); \r\n  }\r\n  function handleSubmitRB(event){\r\n\r\n    event.preventDefault();\r\n    const data = new FormData(event.currentTarget);\r\n\r\n    if(!data.get('aname') || !data.get('bname')){\r\n      setAlert(400);\r\n      setTimeout(() => {\r\n        onAlertClosed();\r\n      }, 3000);\r\n      return\r\n    }\r\n\r\n    const loginDataObj = {\r\n      bname: data.get('bname'),\r\n      aname: data.get('aname'),\r\n    } \r\n    \r\n    api.post('/removeBook', loginDataObj, {withCredentials: true})\r\n    .then(function(res){\r\n      console.log(200)\r\n      setAlert(res.status);\r\n      if(res.status === 200){\r\n        setTimeout(function(){\r\n          onAlertClosed();\r\n          navigate(\"/\")\r\n        }, 3000);\r\n      }\r\n      else if(res.status === 201){\r\n        setTimeout(function(){\r\n          onAlertClosed();\r\n          navigate(\"/verifyUser\", {state: { userId: res.data.userId, email: res.data.email}})\r\n        }, 3000);\r\n      }\r\n    })\r\n    .catch(function(err){\r\n      setAlert(err.response.status);\r\n      setTimeout(function(){\r\n        onAlertClosed();\r\n      }, 3000);\r\n    }); \r\n  }\r\n  function handleSubmitASB(event){\r\n\r\n    event.preventDefault();\r\n    const data = new FormData(event.currentTarget);\r\n\r\n    if(!data.get('aname') || !data.get('bname') || !data.get('mname')){\r\n      setAlert(400);\r\n      setTimeout(() => {\r\n        onAlertClosed();\r\n      }, 3000);\r\n      return\r\n    }\r\n\r\n    const loginDataObj = {\r\n      bname: data.get('bname'),\r\n      aname: data.get('aname'),\r\n      userName: data.get('mname')\r\n    } \r\n    \r\n    api.post('/assignBook', loginDataObj, {withCredentials: true})\r\n    .then(function(res){\r\n      console.log(200)\r\n      setAlert(res.status);\r\n      if(res.status === 200){\r\n        setTimeout(function(){\r\n          onAlertClosed();\r\n          navigate(\"/\")\r\n        }, 3000);\r\n      }\r\n      else if(res.status === 201){\r\n        setTimeout(function(){\r\n          onAlertClosed();\r\n          navigate(\"/verifyUser\", {state: { userId: res.data.userId, email: res.data.email}})\r\n        }, 3000);\r\n      }\r\n    })\r\n    .catch(function(err){\r\n      setAlert(err.response.status);\r\n      setTimeout(function(){\r\n        onAlertClosed();\r\n      }, 3000);\r\n    }); \r\n  }\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 750,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n  function onLoad(){\r\n    api.get(\"/authenticate\", {withCredentials:true})\r\n    .then(res=>{\r\n      setUserData(res.data);\r\n      getBooks()\r\n      getMembers()\r\n    })\r\n    .catch(err=>{\r\n      console.log(err);\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    onLoad();\r\n\r\n  }, [])\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n    \r\n    {\r\n      (userData)?\r\n      <>\r\n      {\r\n        (userData.userType === \"librarian\")? <DriverHome/>:<></>\r\n      }\r\n      </>\r\n      :<Navbar isLoggedIn={false}></Navbar>\r\n    }\r\n<Modal\r\n  open={open}\r\n  onClose={handleClose}\r\n  aria-labelledby=\"modal-modal-title\"\r\n  aria-describedby=\"modal-modal-description\"\r\n>\r\n  <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={style}>\r\n  {\r\n      (alert)\r\n      ?\r\n      <Alert severity={messages[alert][0]} variant='standard'>{messages[alert][1]}</Alert>\r\n      :\r\n      <></>\r\n    }\r\n  <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  id=\"name\"\r\n                  label=\"Name\"\r\n                  name=\"name\"\r\n                  autoComplete=\"name\"\r\n                  />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  name=\"phone\"\r\n                  label=\"Mobile Number\"\r\n                  type=\"number\"\r\n                  id=\"phone\"\r\n                  autoComplete=\"phone\"\r\n                  />\r\n              </Grid>\r\n            </Grid>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n              >\r\n              Submit\r\n            </Button>\r\n  </Box>\r\n</Modal>\r\n    <Button\r\n              type=\"submit\"\r\n              \r\n              variant=\"contained\"\r\n              sx={{margin:2, mt: 3, mb: 2 }}\r\n              onClick={handleOpen}\r\n              >\r\n              Add Member\r\n            </Button>\r\n            <Modal\r\n              open={openRM}\r\n              onClose={handleCloseRM}\r\n              aria-labelledby=\"modal-modal-title\"\r\n              aria-describedby=\"modal-modal-description\"\r\n            >\r\n  <Box component=\"form\" noValidate onSubmit={handleSubmitRM} sx={style}>\r\n  {\r\n      (alert)\r\n      ?\r\n      <Alert severity={messages[alert][0]} variant='standard'>{messages[alert][1]}</Alert>\r\n      :\r\n      <></>\r\n    }\r\n  <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  id=\"name\"\r\n                  label=\"Name\"\r\n                  name=\"name\"\r\n                  autoComplete=\"name\"\r\n                  />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  name=\"phone\"\r\n                  label=\"Mobile Number\"\r\n                  type=\"number\"\r\n                  id=\"phone\"\r\n                  autoComplete=\"phone\"\r\n                  />\r\n              </Grid>\r\n            </Grid>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n              >\r\n              Submit\r\n            </Button>\r\n          </Box>\r\n        </Modal>\r\n    <Button\r\n              type=\"submit\"\r\n              onClick={handleOpenRM}\r\n              variant=\"contained\"\r\n              sx={{margin:2, mt: 3, mb: 2 }}\r\n              >\r\n              Remove Member\r\n            </Button>\r\n  <Modal\r\n    open={openAB}\r\n    onClose={handleCloseAB}\r\n    aria-labelledby=\"modal-modal-title\"\r\n    aria-describedby=\"modal-modal-description\"\r\n  >\r\n  <Box component=\"form\" noValidate onSubmit={handleSubmitAB} sx={style}>\r\n  {\r\n      (alert)\r\n      ?\r\n      <Alert severity={messages[alert][0]} variant='standard'>{messages[alert][1]}</Alert>\r\n      :\r\n      <></>\r\n    }\r\n  <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  id=\"bname\"\r\n                  label=\"Book Name\"\r\n                  name=\"bname\"\r\n                  autoComplete=\"name\"\r\n                  />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  name=\"aname\"\r\n                  label=\"Author Name\"\r\n                  type=\"name\"\r\n                  id=\"aname\"\r\n                  autoComplete=\"phone\"\r\n                  />\r\n              </Grid>\r\n            </Grid>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n              >\r\n              Submit\r\n            </Button>\r\n          </Box>\r\n        </Modal>\r\n    \r\n    <Button\r\n              type=\"submit\"\r\n              onClick={handleOpenAB}\r\n              variant=\"contained\"\r\n              sx={{margin:2, mt: 3, mb: 2 }}\r\n              >\r\n              Add Book\r\n            </Button>\r\n            <Modal\r\n    open={openRB}\r\n    onClose={handleCloseRB}\r\n    aria-labelledby=\"modal-modal-title\"\r\n    aria-describedby=\"modal-modal-description\"\r\n  >\r\n  <Box component=\"form\" noValidate onSubmit={handleSubmitRB} sx={style}>\r\n  {\r\n      (alert)\r\n      ?\r\n      <Alert severity={messages[alert][0]} variant='standard'>{messages[alert][1]}</Alert>\r\n      :\r\n      <></>\r\n    }\r\n  <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  id=\"bname\"\r\n                  label=\"Book Name\"\r\n                  name=\"bname\"\r\n                  autoComplete=\"name\"\r\n                  />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  name=\"aname\"\r\n                  label=\"Author Name\"\r\n                  type=\"name\"\r\n                  id=\"aname\"\r\n                  autoComplete=\"phone\"\r\n                  />\r\n              </Grid>\r\n            </Grid>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n              >\r\n              Submit\r\n            </Button>\r\n          </Box>\r\n        </Modal>\r\n  \r\n    <Button\r\n              type=\"submit\"\r\n              onClick={handleOpenRB}\r\n              variant=\"contained\"\r\n              sx={{margin:2, mt: 3, mb: 2 }}\r\n              >\r\n              Remove Book\r\n            </Button>\r\n            <Modal\r\n    open={openASB}\r\n    onClose={handleCloseASB}\r\n    aria-labelledby=\"modal-modal-title\"\r\n    aria-describedby=\"modal-modal-description\"\r\n  >\r\n  <Box component=\"form\" noValidate onSubmit={handleSubmitASB} sx={style}>\r\n  {\r\n      (alert)\r\n      ?\r\n      <Alert severity={messages[alert][0]} variant='standard'>{messages[alert][1]}</Alert>\r\n      :\r\n      <></>\r\n    }\r\n  <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  id=\"bname\"\r\n                  label=\"Book Name\"\r\n                  name=\"bname\"\r\n                  autoComplete=\"name\"\r\n                  />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  name=\"aname\"\r\n                  label=\"Author Name\"\r\n                  type=\"name\"\r\n                  id=\"aname\"\r\n                  autoComplete=\"phone\"\r\n                  />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  id=\"mname\"\r\n                  label=\"Member Name\"\r\n                  name=\"mname\"\r\n                  autoComplete=\"name\"\r\n                  />\r\n              </Grid>\r\n            </Grid>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n              >\r\n              Submit\r\n            </Button>\r\n          </Box>\r\n        </Modal>\r\n    <Button\r\n              type=\"submit\"\r\n              onClick={handleOpenASB}\r\n              variant=\"contained\"\r\n              sx={{margin:2, mt: 3, mb: 2 }}\r\n              >\r\n              Assign Book\r\n            </Button>\r\n  <Modal\r\n    open={openBL}\r\n    onClose={handleCloseBL}\r\n    aria-labelledby=\"modal-modal-title\"\r\n    aria-describedby=\"modal-modal-description\"\r\n  >\r\n        <Box component=\"form\" noValidate onSubmit={getBooks} sx={style}>\r\n  {\r\n      (alert)\r\n      ?\r\n      <Alert severity={messages[alert][0]} variant='standard'>{messages[alert][1]}</Alert>\r\n      :\r\n      <></>\r\n  }\r\n\r\n<TableContainer component={Paper}>\r\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"right\">Book Name</TableCell>\r\n            <TableCell align=\"right\">Author Name</TableCell>\r\n            <TableCell align=\"right\">User Name</TableCell>\r\n            <TableCell align=\"right\">User Id</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {books?.map((book) => (\r\n            <TableRow\r\n              key={book._id}\r\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n            >\r\n              <TableCell align=\"right\">{book.bname}</TableCell>\r\n              <TableCell align=\"right\">{book.aname}</TableCell>\r\n              <TableCell align=\"right\">{book.userName}</TableCell>\r\n              <TableCell align=\"right\">{book.userId}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n          </Box>\r\n        </Modal>\r\n    <Button\r\n              type=\"submit\"\r\n              onClick={handleOpenBL}\r\n              variant=\"contained\"\r\n              sx={{ margin:2,mt: 3, mb: 2 }}\r\n              >\r\n              Books List\r\n            </Button>\r\n\r\n            <Modal\r\n    open={openML}\r\n    onClose={handleCloseML}\r\n    aria-labelledby=\"modal-modal-title\"\r\n    aria-describedby=\"modal-modal-description\"\r\n  >\r\n        <Box component=\"form\" noValidate onSubmit={getBooks} sx={style}>\r\n  {\r\n      (alert)\r\n      ?\r\n      <Alert severity={messages[alert][0]} variant='standard'>{messages[alert][1]}</Alert>\r\n      :\r\n      <></>\r\n  }\r\n\r\n<TableContainer component={Paper}>\r\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"right\">Member Name</TableCell>\r\n            <TableCell align=\"right\">Member Name</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {members?.map((member) => (\r\n            <TableRow\r\n              key={member._id}\r\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n            >\r\n              <TableCell align=\"right\">{member.mname}</TableCell>\r\n              <TableCell align=\"right\">{member.mnumber}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n          </Box>\r\n        </Modal>\r\n    <Button\r\n              type=\"submit\"\r\n              onClick={handleOpenML}\r\n              variant=\"contained\"\r\n              sx={{margin:2, mt: 3, mb: 2 }}\r\n              >\r\n              Members List\r\n            </Button>\r\n    </>\r\n  )\r\n}\r\n","F:\\Users\\Asus\\react_lms\\lms\\src\\pages\\register\\index.js",[],[],"F:\\Users\\Asus\\react_lms\\lms\\src\\components\\navbar\\index.js",["95"],[],"import React from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport Menu from '../menu';\r\nimport Navmenu from '../../utils/Navmenu';\r\nimport Container from '@mui/material/Container';\r\nimport Logo from '../../utils/logo';\r\nimport { useNavigate} from 'react-router-dom'\r\n\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n\r\nconst theme = createTheme();\r\n\r\nconst pages = ['Home', 'About', 'Contact'];\r\n\r\nconst ResponsiveAppBar = (props) => {\r\n  const navigate = useNavigate()\r\n  \r\n  function onLogInClicked(){\r\n    navigate('/login');\r\n  }\r\n  function onRegisterClicked(){\r\n    navigate('/register');\r\n  }\r\n\r\n\r\n\r\n  const handleOpenNavMenu = (event) => {\r\n  };\r\n\r\n  const handleCloseNavMenu = () => {\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n\r\n    <AppBar position=\"sticky\">\r\n      <Container maxWidth=\"xl\">\r\n        <Toolbar disableGutters>\r\n          <Logo sx={{ display: { xs: 'none', md: 'flex' }, mr: 1, height:\"3rem\", width:\"3rem\"  }} />\r\n          <Typography\r\n            variant=\"h6\"\r\n            noWrap\r\n            component=\"a\"\r\n            href=\"/\"\r\n            sx={{\r\n              mr: 2,\r\n              display: { xs: 'none', md: 'flex' },\r\n              fontFamily: 'monospace',\r\n              fontWeight: 700,\r\n              letterSpacing: '.1rem',\r\n              color: 'inherit',\r\n              textDecoration: 'none',\r\n            }}\r\n            >\r\n            ONLINE PARKING SYSTEM\r\n          </Typography>\r\n\r\n          <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\r\n            {/* <IconButton\r\n              size=\"large\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls=\"menu-appbar\"\r\n              aria-haspopup=\"true\"\r\n              onClick={handleOpenNavMenu}\r\n              color=\"inherit\"\r\n            >\r\n              <MenuIcon />\r\n              <Navmenu/>\r\n            </IconButton> */}\r\n            <Navmenu />\r\n          </Box>\r\n          <Logo sx={{ display: { xs: 'flex', md: 'none' }, mr: 1, height:\"2rem\", width:\"2rem\" }} />\r\n          <Typography\r\n            variant=\"h5\"\r\n            noWrap\r\n            component=\"a\"\r\n            href=\"\"\r\n            sx={{\r\n              mr: 2,\r\n              display: { xs: 'flex', md: 'none' },\r\n              flexGrow: 1,\r\n              fontFamily: 'monospace',\r\n              fontWeight: 700,\r\n              letterSpacing: '.1rem',\r\n              color: 'inherit',\r\n              textDecoration: 'none',\r\n            }}\r\n            >\r\n            OPS\r\n          </Typography>\r\n          <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\r\n            {pages.map((page) => (\r\n              <Button\r\n              key={page}\r\n              onClick={handleCloseNavMenu}\r\n              sx={{ my: 2, color: 'white', display: 'block' }}\r\n              >\r\n                {page}\r\n              </Button>\r\n            ))}\r\n          </Box>\r\n\r\n          <Box sx={{ flexGrow: 0 }}>\r\n          {\r\n            (props.isLoggedIn)\r\n            ?\r\n            (<><Menu/></>)\r\n            :\r\n            (<><Button color=\"inherit\" onClick={onLogInClicked}>Login</Button>\r\n            <Button color=\"inherit\" onClick={onRegisterClicked}>Register</Button></>)\r\n          }\r\n          </Box>\r\n        </Toolbar>\r\n      </Container>\r\n    </AppBar>\r\n            </ThemeProvider>\r\n  );\r\n};\r\nexport default ResponsiveAppBar;","F:\\Users\\Asus\\react_lms\\lms\\src\\components\\menu\\index.js",[],[],"F:\\Users\\Asus\\react_lms\\lms\\src\\utils\\Navmenu\\index.js",[],[],"F:\\Users\\Asus\\react_lms\\lms\\src\\utils\\logo\\index.js",[],[],"F:\\Users\\Asus\\react_lms\\lms\\src\\utils\\navMenuList\\index.js",[],[],"F:\\Users\\Asus\\react_lms\\lms\\src\\utils\\menuList\\index.js",[],[],"F:\\Users\\Asus\\react_lms\\lms\\src\\api.js",[],[],"F:\\Users\\Asus\\react_lms\\lms\\src\\pages\\verifyUser\\index.js",[],[],"F:\\Users\\Asus\\react_lms\\lms\\src\\pages\\dhome\\index.js",[],[],"F:\\Users\\Asus\\react_lms\\lms\\src\\components\\dDrawerAppbar\\index.js",["96","97","98","99","100","101","102","103","104","105","106","107","108","109"],[],"import React, {useState} from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Divider from '@mui/material/Divider';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Logo from '../../utils/logo';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Menu from '@mui/material/Menu';\r\nimport AccountBoxIcon from '@mui/icons-material/AccountBox';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\r\nimport LogoutIcon from '@mui/icons-material/Logout';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ListItemIcon, ListItemText, MenuList, ListItemButton } from '@mui/material';\r\nimport api from '../../api';\r\n\r\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\r\nimport AddBoxIcon from '@mui/icons-material/AddBox';\r\n\r\n\r\nconst drawerWidth = 300;\r\n\r\nfunction DrawerAppBar() {\r\n  \r\n  const [mobileOpen, setMobileOpen] = useState(false);\r\n  const [anchorElUser, setAnchorElUser] = useState(null);\r\n  \r\n  const navigate = useNavigate();\r\n  const handleOpenUserMenu = (event) => {\r\n    setAnchorElUser(event.currentTarget);\r\n  };\r\n  \r\n  const handleCloseUserMenu = () => {\r\n    setAnchorElUser(null);\r\n  };\r\n  \r\n  const openDrawer = () => {\r\n    setMobileOpen(true);\r\n  };\r\n  \r\n  const closeDrawer = () =>{\r\n    setMobileOpen(false);\r\n  }\r\n\r\n\r\n  function onNewVehicleClicked(){\r\n    navigate(\"/login\");\r\n  }\r\n  function onVehicleSelected(){\r\n    navigate(\"/register\")\r\n  }\r\n  \r\n\r\n\r\n  const onLogout = () => {\r\n    api.get(\"/logout\", {withCredentials: true})\r\n    .then(function(res){\r\n      if(res.status === 200){\r\n        console.log(res);\r\n        window.location.href = \"/\";\r\n      }\r\n      else\r\n      console.log(res);\r\n    })\r\n    .catch(function(err){\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  const onProfile = () =>{\r\n    navigate('/profile')\r\n  }\r\n  \r\n  const settings = [\r\n    [<AccountCircleIcon fontSize='small'/>, 'Profile', onProfile], \r\n    [<LogoutIcon fontSize='small'/>, 'Logout', onLogout]\r\n  ];\r\n\r\n\r\n  return (\r\n    <Box sx={{ display: 'nav' }}>\r\n      <AppBar component=\"nav\" position='sticky'>\r\n        <Toolbar>\r\n          <Logo sx={{ display: { xs: 'flex', md: 'none' }, mr: 1, height:\"2rem\", width:\"2rem\" }} />\r\n          <Typography\r\n            variant=\"h5\"\r\n            noWrap\r\n            component=\"a\"\r\n            href=\"\"\r\n            sx={{\r\n              mr: 2,\r\n              display: { xs: 'flex', md: 'none' },\r\n              flexGrow: 1,\r\n              fontFamily: 'monospace',\r\n              fontWeight: 700,\r\n              letterSpacing: '.1rem',\r\n              color: 'inherit',\r\n              textDecoration: 'none',\r\n            }}\r\n            >\r\n            LMS\r\n          </Typography>\r\n          <Logo sx={{ display: { xs: 'none', md: 'flex' }, mr: 1, height:\"3rem\", width:\"3rem\"  }} />\r\n          <Typography\r\n            variant=\"h6\"\r\n            noWrap\r\n            component=\"a\"\r\n            href=\"/\"\r\n            sx={{\r\n              mr: 2,\r\n              display: { xs: 'none', md: 'flex' },\r\n              fontFamily: 'monospace',\r\n              fontWeight: 700,\r\n              letterSpacing: '.1rem',\r\n              color: 'inherit',\r\n              textDecoration: 'none',\r\n              flexGrow: 1\r\n            }}\r\n            >\r\n            LIBRARY MANAGEMENT SYSTEM\r\n          </Typography>\r\n          <Box sx={{ flexGrow: 0 }}>\r\n            <Tooltip title=\"Open settings\">\r\n              <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\r\n                <AccountBoxIcon fontSize='large' />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Menu\r\n              sx={{ mt: '45px' }}\r\n              id=\"menu-appbar\"\r\n              anchorEl={anchorElUser}\r\n              anchorOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n              }}\r\n              keepMounted\r\n              transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n              }}\r\n              open={Boolean(anchorElUser)}\r\n              onClose={handleCloseUserMenu}\r\n            >\r\n              <MenuList>\r\n              {settings.map((setting) => (\r\n                <MenuItem onClick={setting[2]}>\r\n                  <ListItemIcon>\r\n                    {setting[0]}\r\n                  </ListItemIcon>\r\n                  <ListItemText>{setting[1]}</ListItemText>\r\n                </MenuItem>\r\n              ))}\r\n              </MenuList>\r\n            </Menu>\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Box component=\"nav\">\r\n        \r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default DrawerAppBar;","F:\\Users\\Asus\\react_lms\\lms\\src\\components\\selectVehicle\\index.js",[],[],{"ruleId":"110","severity":1,"message":"111","line":3,"column":25,"nodeType":"112","messageId":"113","endLine":3,"endColumn":29},{"ruleId":"110","severity":1,"message":"114","line":14,"column":8,"nodeType":"112","messageId":"113","endLine":14,"endColumn":18},{"ruleId":"110","severity":1,"message":"115","line":20,"column":10,"nodeType":"112","messageId":"113","endLine":20,"endColumn":16},{"ruleId":"116","severity":1,"message":"117","line":316,"column":6,"nodeType":"118","endLine":316,"endColumn":8,"suggestions":"119"},{"ruleId":"110","severity":1,"message":"120","line":31,"column":9,"nodeType":"112","messageId":"113","endLine":31,"endColumn":26},{"ruleId":"110","severity":1,"message":"121","line":4,"column":8,"nodeType":"112","messageId":"113","endLine":4,"endColumn":15},{"ruleId":"110","severity":1,"message":"122","line":5,"column":8,"nodeType":"112","messageId":"113","endLine":5,"endColumn":14},{"ruleId":"110","severity":1,"message":"123","line":6,"column":8,"nodeType":"112","messageId":"113","endLine":6,"endColumn":12},{"ruleId":"110","severity":1,"message":"124","line":7,"column":8,"nodeType":"112","messageId":"113","endLine":7,"endColumn":16},{"ruleId":"110","severity":1,"message":"125","line":8,"column":8,"nodeType":"112","messageId":"113","endLine":8,"endColumn":16},{"ruleId":"110","severity":1,"message":"126","line":20,"column":48,"nodeType":"112","messageId":"113","endLine":20,"endColumn":62},{"ruleId":"110","severity":1,"message":"127","line":23,"column":8,"nodeType":"112","messageId":"113","endLine":23,"endColumn":20},{"ruleId":"110","severity":1,"message":"128","line":24,"column":8,"nodeType":"112","messageId":"113","endLine":24,"endColumn":18},{"ruleId":"110","severity":1,"message":"129","line":27,"column":7,"nodeType":"112","messageId":"113","endLine":27,"endColumn":18},{"ruleId":"110","severity":1,"message":"130","line":31,"column":10,"nodeType":"112","messageId":"113","endLine":31,"endColumn":20},{"ruleId":"110","severity":1,"message":"131","line":43,"column":9,"nodeType":"112","messageId":"113","endLine":43,"endColumn":19},{"ruleId":"110","severity":1,"message":"132","line":47,"column":9,"nodeType":"112","messageId":"113","endLine":47,"endColumn":20},{"ruleId":"110","severity":1,"message":"133","line":52,"column":12,"nodeType":"112","messageId":"113","endLine":52,"endColumn":31},{"ruleId":"110","severity":1,"message":"134","line":55,"column":12,"nodeType":"112","messageId":"113","endLine":55,"endColumn":29},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Typography' is defined but never used.","'alert1' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'onLoad'. Either include it or remove the dependency array.","ArrayExpression",["135"],"'handleOpenNavMenu' is assigned a value but never used.","'Divider' is defined but never used.","'Drawer' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'MenuIcon' is defined but never used.","'ListItemButton' is defined but never used.","'CheckBoxIcon' is defined but never used.","'AddBoxIcon' is defined but never used.","'drawerWidth' is assigned a value but never used.","'mobileOpen' is assigned a value but never used.","'openDrawer' is assigned a value but never used.","'closeDrawer' is assigned a value but never used.","'onNewVehicleClicked' is defined but never used.","'onVehicleSelected' is defined but never used.",{"desc":"136","fix":"137"},"Update the dependencies array to be: [onLoad]",{"range":"138","text":"139"},[8690,8692],"[onLoad]"]